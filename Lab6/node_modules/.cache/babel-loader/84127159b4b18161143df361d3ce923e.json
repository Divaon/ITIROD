{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\musicplayerReact\\\\musicplayer\\\\src\\\\components\\\\main-body.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState, useRef } from 'react';\nimport '../App.css';\nimport { userDataContext } from '../context/usercontext';\nimport prev from '../images/previous.png';\nimport next from '../images/fast-forward.png';\nimport pause from '../images/play.png';\nimport circle from '../images/replay.png';\nimport logolist from '../images/playlist.png';\nimport logo from '../images/DQBBAtuUEAIcZuL.jpg';\nimport useAudio from '../hooks/useAudio';\nimport MusicList from './music-list';\nimport ALL_MUSIC from '../utils/musics_functions';\nimport { GetData } from '../utils/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainBody() {\n  _s();\n\n  const {\n    userData,\n    setUserData\n  } = useContext(userDataContext); // useEffect(() => {\n  //     setUserData({userenter: false});\n  // }, [])\n  // const { useruid, databaseref } = userData;\n  // setUserData({ useruid: 'hjdg' })\n  // console.log(databaseref)\n  // const [auth, setAuth] = useState(null);\n  // const [database, setDatabase] = useState(null);\n  // useEffect(() => {\n  //     // Initialize Firebase\n  //     firebase.initializeApp(firebaseConfig);\n  //     setAuth(firebase.auth());\n  //     setDatabase(firebase.database())\n  // }, []);\n  // const [Artist, setArtist] = useState(null);\n  // const [Musicname, setMusicname] = useState(null);\n  // const [Musicsource, setMusicsorce] = useState(null);\n\n  const [musicIdx, setMusicIdx] = useState(0); // const audioEl = useRef(null)\n  // const [isPlaying, setIsPlaying] = useState(false);\n\n  const [musicData, setMusicData] = useState(null); // let musicAudio = document.querySelector(\"#main-audio\")\n  // let audio= new Audio(ALL_MUSIC[indexs-1].src);\n  // useEffect(() => {\n  //     // audio.load();\n  //     if (isplay) {\n  //     }\n  //     else {\n  //     }\n  // });\n\n  {\n    /* <audio id=\"main-audio\" src={ALL_MUSIC[musicIndex-1].src}></audio> */\n  }\n  const [playing, toggle, setUrl, playAfterSet] = useAudio('');\n  const [showList, setShowList] = useState(false);\n  const [compositionsindex, setCompositionsindex] = useState([1, 2, 3, 4]);\n  const [liststatus, setliststatus] = useState(false);\n\n  const handlePlayPause = () => {\n    toggle(); // PlayPause();\n    // setisplay(!isplay);\n  };\n\n  useEffect(() => {\n    setMusicData(ALL_MUSIC[musicIdx] || null);\n  }, [musicIdx]);\n  useEffect(() => {\n    setUrl((musicData === null || musicData === void 0 ? void 0 : musicData.url) || '');\n    console.log('musicData', musicData);\n  }, [musicData]);\n\n  const handlePrev = () => {\n    // const t = Prev();\n    // setindexs(t);\n    // setisplay(true);\n    // setsource(ALL_MUSIC[t-1].src)\n    if (playing) toggle();\n    setMusicIdx(musicIdx == 0 ? ALL_MUSIC.length - 1 : musicIdx - 1);\n    let index = musicIdx;\n\n    if (musicIdx == 0) {\n      index = ALL_MUSIC.length - 1;\n    } else {\n      index = musicIdx - 1;\n    }\n\n    console.log(musicIdx, \"afterset\"); // console.log(\"prefor\")\n\n    let found = true;\n\n    while (found) {\n      for (let i = 0; i < compositionsindex.length; i++) {\n        if (compositionsindex[i] - 1 == index) {\n          found = false;\n          setMusicIdx(index);\n        }\n      }\n\n      if (index == 0) {\n        index = ALL_MUSIC.length - 1;\n      } else {\n        index--;\n      }\n    }\n  };\n\n  const handleNext = () => {\n    // const t = Next();\n    // setindexs(t);\n    // setisplay(true);\n    // console.log(ALL_MUSIC[indexs-1].src)\n    // let k=ALL_MUSIC[indexs-1];\n    // console.log(k, indexs);\n    // setsource(ALL_MUSIC[indexs-1].src)\n    if (playing) toggle();\n    console.log(musicIdx, \"preset\");\n    let index = musicIdx;\n\n    if (musicIdx == ALL_MUSIC.length - 1) {\n      index = 0;\n    } else {\n      index = musicIdx + 1;\n    }\n\n    console.log(musicIdx, \"afterset\"); // console.log(\"prefor\")\n\n    let found = true;\n\n    while (found) {\n      for (let i = 0; i < compositionsindex.length; i++) {\n        if (compositionsindex[i] - 1 == index) {\n          found = false;\n          setMusicIdx(index);\n        }\n      }\n\n      if (index == ALL_MUSIC.length - 1) {\n        index = 0;\n      } else {\n        index++;\n      }\n    }\n  };\n\n  const handlechange = () => {\n    if (liststatus == false) {\n      GetData().then(result => {\n        let t = JSON.parse(result);\n        let k = [];\n\n        for (let i = 0; i < t.length; i++) {\n          k.push(t[i].index);\n        }\n\n        ;\n        setCompositionsindex(k);\n        setliststatus(true);\n      });\n    } else {\n      setliststatus(false);\n      setCompositionsindex([1, 2, 3, 4]);\n    }\n  };\n\n  const handlelike = () => {\n    GetData().then(result => {\n      console.log(\"result pre=\", result);\n      let t = JSON.parse(result);\n      console.log(t);\n      let found = false;\n\n      for (let i = 0; i < t.length; i++) {\n        if (t[i] - 1 == index) {\n          found = true;\n        }\n      }\n\n      if (found == false) {\n        t.push(musicIdx + 1);\n      }\n\n      LoadDataList(t);\n    });\n  }; // const handleCircle = () => {\n  //     Circle()\n  // }\n\n\n  const handleListItemClick = id => {\n    console.log('clicked with id', id);\n    const newIdx = ALL_MUSIC.findIndex(data => data.id == id);\n\n    if (newIdx != -1) {\n      console.log('newIdx', newIdx);\n      setShowList(false);\n      setMusicIdx(newIdx);\n\n      if (!playing) {\n        playAfterSet(true);\n        setUrl(ALL_MUSIC[newIdx].url);\n      } else {\n        toggle();\n        playAfterSet(true);\n        setUrl(ALL_MUSIC[newIdx].url);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        id: \"more-s\",\n        className: \"material-icons\",\n        onClick: () => setShowList(true),\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), showList && /*#__PURE__*/_jsxDEV(MusicList // listIds={ALL_MUSIC.map((data) => data.id)}\n      , {\n        listIds: compositionsindex,\n        onClick: handleListItemClick,\n        onClose: () => setShowList(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"likedislike\",\n        className: \"listc\",\n        onClick: handlelike,\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"changelist\",\n        className: \"listc\",\n        onClick: handlechange,\n        children: \"Choose user list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-area\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: (musicData === null || musicData === void 0 ? void 0 : musicData.name) || 'Not defined'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"artist\",\n        children: (musicData === null || musicData === void 0 ? void 0 : musicData.artist) || 'Not defined'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlss\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"prev\",\n        className: \"material-icons prev musiccontrlole\",\n        onClick: handlePrev,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"pause\",\n        className: \"material-icons play musiccontrlole\",\n        onClick: handlePlayPause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"next\",\n        className: \"material-icons next musiccontrlole\",\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"repeat-plist\",\n        className: \"material-icons repeat musiccontrlole\",\n        title: \"Playlist looped\",\n        onClick: () => {},\n        children: \"Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainBody, \"60yf/hk9Y5WHFcEp2bos5u/oj4Y=\", false, function () {\n  return [useAudio];\n});\n\n_c = MainBody;\nexport default MainBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"names":["useContext","useEffect","useState","useRef","userDataContext","prev","next","pause","circle","logolist","logo","useAudio","MusicList","ALL_MUSIC","GetData","MainBody","userData","setUserData","musicIdx","setMusicIdx","musicData","setMusicData","playing","toggle","setUrl","playAfterSet","showList","setShowList","compositionsindex","setCompositionsindex","liststatus","setliststatus","handlePlayPause","url","console","log","handlePrev","length","index","found","i","handleNext","handlechange","then","result","t","JSON","parse","k","push","handlelike","LoadDataList","handleListItemClick","id","newIdx","findIndex","data","name","artist"],"sources":["C:/Users/user/Desktop/musicplayerReact/musicplayer/src/components/main-body.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\nimport { useContext, useEffect, useState, useRef } from 'react';\r\nimport '../App.css';\r\n\r\nimport { userDataContext } from '../context/usercontext';\r\nimport prev from '../images/previous.png';\r\nimport next from '../images/fast-forward.png';\r\nimport pause from '../images/play.png';\r\nimport circle from '../images/replay.png';\r\nimport logolist from '../images/playlist.png';\r\nimport logo from '../images/DQBBAtuUEAIcZuL.jpg';\r\nimport useAudio from '../hooks/useAudio';\r\nimport MusicList from './music-list';\r\nimport ALL_MUSIC from '../utils/musics_functions';\r\n\r\nimport { GetData } from '../utils/firebase';\r\n\r\n\r\n\r\n\r\nfunction MainBody() {\r\n    const { userData, setUserData } = useContext(userDataContext);\r\n\r\n    // useEffect(() => {\r\n    //     setUserData({userenter: false});\r\n    // }, [])\r\n    // const { useruid, databaseref } = userData;\r\n\r\n    // setUserData({ useruid: 'hjdg' })\r\n    // console.log(databaseref)\r\n\r\n    // const [auth, setAuth] = useState(null);\r\n    // const [database, setDatabase] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     // Initialize Firebase\r\n    //     firebase.initializeApp(firebaseConfig);\r\n\r\n    //     setAuth(firebase.auth());\r\n    //     setDatabase(firebase.database())\r\n    // }, []);\r\n\r\n    // const [Artist, setArtist] = useState(null);\r\n    // const [Musicname, setMusicname] = useState(null);\r\n    // const [Musicsource, setMusicsorce] = useState(null);\r\n    const [musicIdx, setMusicIdx] = useState(0);\r\n\r\n    // const audioEl = useRef(null)\r\n    // const [isPlaying, setIsPlaying] = useState(false);\r\n    const [musicData, setMusicData] = useState(null);\r\n\r\n    // let musicAudio = document.querySelector(\"#main-audio\")\r\n\r\n    // let audio= new Audio(ALL_MUSIC[indexs-1].src);\r\n\r\n    // useEffect(() => {\r\n    //     // audio.load();\r\n    //     if (isplay) {\r\n\r\n\r\n    //     }\r\n    //     else {\r\n    //     }\r\n    // });\r\n\r\n\r\n    {/* <audio id=\"main-audio\" src={ALL_MUSIC[musicIndex-1].src}></audio> */ }\r\n\r\n    const [playing, toggle, setUrl, playAfterSet] = useAudio('');\r\n\r\n    const [showList, setShowList] = useState(false);\r\n\r\n    const [compositionsindex, setCompositionsindex] = useState([1, 2, 3, 4])\r\n\r\n    const [liststatus, setliststatus] = useState(false);\r\n\r\n    const handlePlayPause = () => {\r\n\r\n        toggle()\r\n\r\n        // PlayPause();\r\n        // setisplay(!isplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMusicData(ALL_MUSIC[musicIdx] || null);\r\n    }, [musicIdx]);\r\n\r\n    useEffect(() => {\r\n        setUrl(musicData?.url || '')\r\n        console.log('musicData', musicData);\r\n    }, [musicData]);\r\n\r\n    const handlePrev = () => {\r\n        // const t = Prev();\r\n        // setindexs(t);\r\n        // setisplay(true);\r\n        // setsource(ALL_MUSIC[t-1].src)\r\n        if (playing)\r\n            toggle()\r\n        setMusicIdx(musicIdx == 0 ? ALL_MUSIC.length - 1 : musicIdx - 1);\r\n\r\n\r\n        let index = musicIdx;\r\n        if (musicIdx == 0) {\r\n            index = ALL_MUSIC.length - 1;\r\n        }\r\n        else {\r\n            index = musicIdx - 1;\r\n        }\r\n\r\n        console.log(musicIdx, \"afterset\");\r\n        // console.log(\"prefor\")\r\n        let found = true;\r\n\r\n        while (found) {\r\n            for (let i = 0; i < compositionsindex.length; i++) {\r\n                if (compositionsindex[i] - 1 == index) {\r\n                    found = false;\r\n                    setMusicIdx(index);\r\n                }\r\n            }\r\n            if (index == 0) {\r\n                index = ALL_MUSIC.length - 1;\r\n            }\r\n            else {\r\n                index--;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleNext = () => {\r\n        // const t = Next();\r\n        // setindexs(t);\r\n        // setisplay(true);\r\n        // console.log(ALL_MUSIC[indexs-1].src)\r\n        // let k=ALL_MUSIC[indexs-1];\r\n        // console.log(k, indexs);\r\n        // setsource(ALL_MUSIC[indexs-1].src)\r\n        if (playing)\r\n            toggle()\r\n        console.log(musicIdx, \"preset\");\r\n\r\n\r\n        let index = musicIdx;\r\n        if (musicIdx == ALL_MUSIC.length - 1) {\r\n            index = 0;\r\n        }\r\n        else {\r\n            index = musicIdx + 1;\r\n        }\r\n\r\n        console.log(musicIdx, \"afterset\");\r\n        // console.log(\"prefor\")\r\n        let found = true;\r\n\r\n        while (found) {\r\n            for (let i = 0; i < compositionsindex.length; i++) {\r\n                if (compositionsindex[i] - 1 == index) {\r\n                    found = false;\r\n                    setMusicIdx(index);\r\n                }\r\n            }\r\n            if (index == ALL_MUSIC.length - 1) {\r\n                index = 0;\r\n            }\r\n            else {\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlechange = () => {\r\n\r\n        if (liststatus == false) {\r\n            GetData().then((result) => {\r\n                let t = JSON.parse(result);\r\n                let k = []\r\n                for (let i = 0; i < t.length; i++) {\r\n                    k.push(t[i].index)\r\n                };\r\n                setCompositionsindex(k);\r\n                setliststatus(true);\r\n\r\n            });\r\n        }\r\n        else {\r\n            setliststatus(false);\r\n            setCompositionsindex([1, 2, 3, 4]);\r\n        }\r\n    }\r\n\r\n    const handlelike = () => {\r\n\r\n        GetData().then((result) => {\r\n            console.log(\"result pre=\", result);\r\n            let t = JSON.parse(result);\r\n            console.log(t);\r\n            let found = false;\r\n            for (let i = 0; i < t.length; i++) {\r\n                if (t[i] - 1 == index) {\r\n                    found = true;\r\n                }\r\n            }\r\n\r\n            if (found == false)\r\n            {\r\n                t.push(musicIdx+1)\r\n            }\r\n\r\n            LoadDataList(t);\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // const handleCircle = () => {\r\n    //     Circle()\r\n    // }\r\n\r\n    const handleListItemClick = (id) => {\r\n\r\n        console.log('clicked with id', id)\r\n        const newIdx = ALL_MUSIC.findIndex((data) => data.id == id)\r\n        if (newIdx != -1) {\r\n            console.log('newIdx', newIdx)\r\n            setShowList(false);\r\n            setMusicIdx(newIdx)\r\n            if (!playing) {\r\n                playAfterSet(true)\r\n                setUrl(ALL_MUSIC[newIdx].url)\r\n            } else {\r\n                toggle()\r\n                playAfterSet(true)\r\n                setUrl(ALL_MUSIC[newIdx].url)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top-bar\">\r\n                <i id=\"more-s\" className=\"material-icons\" onClick={() => setShowList(true)}>\r\n                    List\r\n                </i>\r\n                {showList &&\r\n                    (\r\n                        <MusicList\r\n                            // listIds={ALL_MUSIC.map((data) => data.id)}\r\n                            listIds={compositionsindex}\r\n                            onClick={handleListItemClick}\r\n                            onClose={() => setShowList(false)}\r\n                        />\r\n                    )\r\n                }\r\n\r\n\r\n                <span>Now Playing</span>\r\n                <button type=\"button\" id=\"likedislike\" className=\"listc\" onClick={handlelike}>Like</button>\r\n                <button type=\"button\" id=\"changelist\" className=\"listc\" onClick={handlechange}>Choose user list</button>\r\n            </div>\r\n            <div className=\"img-area\">\r\n                <img src={logo} alt=\"\" />\r\n            </div>\r\n            <div className=\"song-details\">\r\n                {/* <p className=\"name\" id=\"nameuser\">{userName || 'Current user'}</p> */}\r\n                <p className=\"name\">{musicData?.name || 'Not defined'}</p>\r\n                <p className=\"artist\">{musicData?.artist || 'Not defined'}</p>\r\n            </div>\r\n            <div className=\"controlss\">\r\n\r\n                <button type=\"button\" id=\"prev\" className=\"material-icons prev musiccontrlole\" onClick={handlePrev}>Prev</button>\r\n\r\n                <button type=\"button\" id=\"pause\" className=\"material-icons play musiccontrlole\" onClick={handlePlayPause}>Pause</button>\r\n\r\n                <button type=\"button\" id=\"next\" className=\"material-icons next musiccontrlole\" onClick={handleNext}>Next</button>\r\n\r\n                <button type=\"button\" id=\"repeat-plist\" className=\"material-icons repeat musiccontrlole\" title=\"Playlist looped\" onClick={() => { }}>Circle</button>\r\n            </div>\r\n            {/* <audio id=\"main-audio\" src={source} controls autoPlay></audio> */}\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainBody;\r\n"],"mappings":";;;AAKA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,OAAO,YAAP;AAEA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,SAASC,OAAT,QAAwB,mBAAxB;;;;AAKA,SAASC,QAAT,GAAoB;EAAA;;EAChB,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAA4BjB,UAAU,CAACI,eAAD,CAA5C,CADgB,CAGhB;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;;EACA,MAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,CAAD,CAAxC,CAzBgB,CA2BhB;EACA;;EACA,MAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C,CA7BgB,CA+BhB;EAEA;EAEA;EACA;EACA;EAGA;EACA;EACA;EACA;;EAGA;IAAC;EAAyE;EAE1E,MAAM,CAACoB,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,YAA1B,IAA0Cd,QAAQ,CAAC,EAAD,CAAxD;EAEA,MAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,KAAD,CAAxC;EAEA,MAAM,CAAC0B,iBAAD,EAAoBC,oBAApB,IAA4C3B,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAA1D;EAEA,MAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAM8B,eAAe,GAAG,MAAM;IAE1BT,MAAM,GAFoB,CAI1B;IACA;EACH,CAND;;EAQAtB,SAAS,CAAC,MAAM;IACZoB,YAAY,CAACR,SAAS,CAACK,QAAD,CAAT,IAAuB,IAAxB,CAAZ;EACH,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;EAIAjB,SAAS,CAAC,MAAM;IACZuB,MAAM,CAAC,CAAAJ,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEa,GAAX,KAAkB,EAAnB,CAAN;IACAC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBf,SAAzB;EACH,CAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;;EAKA,MAAMgB,UAAU,GAAG,MAAM;IACrB;IACA;IACA;IACA;IACA,IAAId,OAAJ,EACIC,MAAM;IACVJ,WAAW,CAACD,QAAQ,IAAI,CAAZ,GAAgBL,SAAS,CAACwB,MAAV,GAAmB,CAAnC,GAAuCnB,QAAQ,GAAG,CAAnD,CAAX;IAGA,IAAIoB,KAAK,GAAGpB,QAAZ;;IACA,IAAIA,QAAQ,IAAI,CAAhB,EAAmB;MACfoB,KAAK,GAAGzB,SAAS,CAACwB,MAAV,GAAmB,CAA3B;IACH,CAFD,MAGK;MACDC,KAAK,GAAGpB,QAAQ,GAAG,CAAnB;IACH;;IAEDgB,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAsB,UAAtB,EAlBqB,CAmBrB;;IACA,IAAIqB,KAAK,GAAG,IAAZ;;IAEA,OAAOA,KAAP,EAAc;MACV,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,iBAAiB,CAACS,MAAtC,EAA8CG,CAAC,EAA/C,EAAmD;QAC/C,IAAIZ,iBAAiB,CAACY,CAAD,CAAjB,GAAuB,CAAvB,IAA4BF,KAAhC,EAAuC;UACnCC,KAAK,GAAG,KAAR;UACApB,WAAW,CAACmB,KAAD,CAAX;QACH;MACJ;;MACD,IAAIA,KAAK,IAAI,CAAb,EAAgB;QACZA,KAAK,GAAGzB,SAAS,CAACwB,MAAV,GAAmB,CAA3B;MACH,CAFD,MAGK;QACDC,KAAK;MACR;IACJ;EAEJ,CArCD;;EAwCA,MAAMG,UAAU,GAAG,MAAM;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAInB,OAAJ,EACIC,MAAM;IACVW,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAsB,QAAtB;IAGA,IAAIoB,KAAK,GAAGpB,QAAZ;;IACA,IAAIA,QAAQ,IAAIL,SAAS,CAACwB,MAAV,GAAmB,CAAnC,EAAsC;MAClCC,KAAK,GAAG,CAAR;IACH,CAFD,MAGK;MACDA,KAAK,GAAGpB,QAAQ,GAAG,CAAnB;IACH;;IAEDgB,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAsB,UAAtB,EArBqB,CAsBrB;;IACA,IAAIqB,KAAK,GAAG,IAAZ;;IAEA,OAAOA,KAAP,EAAc;MACV,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,iBAAiB,CAACS,MAAtC,EAA8CG,CAAC,EAA/C,EAAmD;QAC/C,IAAIZ,iBAAiB,CAACY,CAAD,CAAjB,GAAuB,CAAvB,IAA4BF,KAAhC,EAAuC;UACnCC,KAAK,GAAG,KAAR;UACApB,WAAW,CAACmB,KAAD,CAAX;QACH;MACJ;;MACD,IAAIA,KAAK,IAAIzB,SAAS,CAACwB,MAAV,GAAmB,CAAhC,EAAmC;QAC/BC,KAAK,GAAG,CAAR;MACH,CAFD,MAGK;QACDA,KAAK;MACR;IACJ;EACJ,CAvCD;;EAyCA,MAAMI,YAAY,GAAG,MAAM;IAEvB,IAAIZ,UAAU,IAAI,KAAlB,EAAyB;MACrBhB,OAAO,GAAG6B,IAAV,CAAgBC,MAAD,IAAY;QACvB,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAR;QACA,IAAII,CAAC,GAAG,EAAR;;QACA,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,CAAC,CAACR,MAAtB,EAA8BG,CAAC,EAA/B,EAAmC;UAC/BQ,CAAC,CAACC,IAAF,CAAOJ,CAAC,CAACL,CAAD,CAAD,CAAKF,KAAZ;QACH;;QAAA;QACDT,oBAAoB,CAACmB,CAAD,CAApB;QACAjB,aAAa,CAAC,IAAD,CAAb;MAEH,CATD;IAUH,CAXD,MAYK;MACDA,aAAa,CAAC,KAAD,CAAb;MACAF,oBAAoB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAApB;IACH;EACJ,CAlBD;;EAoBA,MAAMqB,UAAU,GAAG,MAAM;IAErBpC,OAAO,GAAG6B,IAAV,CAAgBC,MAAD,IAAY;MACvBV,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,MAA3B;MACA,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAR;MACAV,OAAO,CAACC,GAAR,CAAYU,CAAZ;MACA,IAAIN,KAAK,GAAG,KAAZ;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,CAAC,CAACR,MAAtB,EAA8BG,CAAC,EAA/B,EAAmC;QAC/B,IAAIK,CAAC,CAACL,CAAD,CAAD,GAAO,CAAP,IAAYF,KAAhB,EAAuB;UACnBC,KAAK,GAAG,IAAR;QACH;MACJ;;MAED,IAAIA,KAAK,IAAI,KAAb,EACA;QACIM,CAAC,CAACI,IAAF,CAAO/B,QAAQ,GAAC,CAAhB;MACH;;MAEDiC,YAAY,CAACN,CAAD,CAAZ;IAGH,CAnBD;EAoBH,CAtBD,CA9KgB,CAuMhB;EACA;EACA;;;EAEA,MAAMO,mBAAmB,GAAIC,EAAD,IAAQ;IAEhCnB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BkB,EAA/B;IACA,MAAMC,MAAM,GAAGzC,SAAS,CAAC0C,SAAV,CAAqBC,IAAD,IAAUA,IAAI,CAACH,EAAL,IAAWA,EAAzC,CAAf;;IACA,IAAIC,MAAM,IAAI,CAAC,CAAf,EAAkB;MACdpB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBmB,MAAtB;MACA3B,WAAW,CAAC,KAAD,CAAX;MACAR,WAAW,CAACmC,MAAD,CAAX;;MACA,IAAI,CAAChC,OAAL,EAAc;QACVG,YAAY,CAAC,IAAD,CAAZ;QACAD,MAAM,CAACX,SAAS,CAACyC,MAAD,CAAT,CAAkBrB,GAAnB,CAAN;MACH,CAHD,MAGO;QACHV,MAAM;QACNE,YAAY,CAAC,IAAD,CAAZ;QACAD,MAAM,CAACX,SAAS,CAACyC,MAAD,CAAT,CAAkBrB,GAAnB,CAAN;MACH;IACJ;EACJ,CAjBD;;EAmBA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,SAAf;MAAA,wBACI;QAAG,EAAE,EAAC,QAAN;QAAe,SAAS,EAAC,gBAAzB;QAA0C,OAAO,EAAE,MAAMN,WAAW,CAAC,IAAD,CAApE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAIKD,QAAQ,iBAED,QAAC,SAAD,CACI;MADJ;QAEI,OAAO,EAAEE,iBAFb;QAGI,OAAO,EAAEwB,mBAHb;QAII,OAAO,EAAE,MAAMzB,WAAW,CAAC,KAAD;MAJ9B;QAAA;QAAA;QAAA;MAAA,QANZ,eAgBI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBJ,eAiBI;QAAQ,IAAI,EAAC,QAAb;QAAsB,EAAE,EAAC,aAAzB;QAAuC,SAAS,EAAC,OAAjD;QAAyD,OAAO,EAAEuB,UAAlE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ,eAkBI;QAAQ,IAAI,EAAC,QAAb;QAAsB,EAAE,EAAC,YAAzB;QAAsC,SAAS,EAAC,OAAhD;QAAwD,OAAO,EAAER,YAAjE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAqBI;MAAK,SAAS,EAAC,UAAf;MAAA,uBACI;QAAK,GAAG,EAAEhC,IAAV;QAAgB,GAAG,EAAC;MAApB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QArBJ,eAwBI;MAAK,SAAS,EAAC,cAAf;MAAA,wBAEI;QAAG,SAAS,EAAC,MAAb;QAAA,UAAqB,CAAAU,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEqC,IAAX,KAAmB;MAAxC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAG,SAAS,EAAC,QAAb;QAAA,UAAuB,CAAArC,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEsC,MAAX,KAAqB;MAA5C;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBJ,eA6BI;MAAK,SAAS,EAAC,WAAf;MAAA,wBAEI;QAAQ,IAAI,EAAC,QAAb;QAAsB,EAAE,EAAC,MAAzB;QAAgC,SAAS,EAAC,oCAA1C;QAA+E,OAAO,EAAEtB,UAAxF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAII;QAAQ,IAAI,EAAC,QAAb;QAAsB,EAAE,EAAC,OAAzB;QAAiC,SAAS,EAAC,oCAA3C;QAAgF,OAAO,EAAEJ,eAAzF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAMI;QAAQ,IAAI,EAAC,QAAb;QAAsB,EAAE,EAAC,MAAzB;QAAgC,SAAS,EAAC,oCAA1C;QAA+E,OAAO,EAAES,UAAxF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ,eAQI;QAAQ,IAAI,EAAC,QAAb;QAAsB,EAAE,EAAC,cAAzB;QAAwC,SAAS,EAAC,sCAAlD;QAAyF,KAAK,EAAC,iBAA/F;QAAiH,OAAO,EAAE,MAAM,CAAG,CAAnI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA7BJ;EAAA,gBADJ;AA8CH;;GA5QQ1B,Q;UAgD2CJ,Q;;;KAhD3CI,Q;AA8QT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}