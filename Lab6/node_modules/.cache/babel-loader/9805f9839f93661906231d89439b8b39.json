{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\musicplayerReact\\\\musicplayer\\\\src\\\\components\\\\main-body.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState, useRef } from 'react';\nimport '../App.css';\nimport { userDataContext } from '../context/usercontext';\nimport prev from '../images/previous.png';\nimport next from '../images/fast-forward.png';\nimport pause from '../images/play.png';\nimport circle from '../images/replay.png';\nimport logolist from '../images/playlist.png';\nimport logo from '../images/DQBBAtuUEAIcZuL.jpg';\nimport useAudio from '../hooks/useAudio';\nimport MusicList from './music-list';\nimport ALL_MUSIC from '../utils/musics_functions';\nimport { GetData, LoadDataList } from '../utils/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainBody() {\n  _s();\n\n  const {\n    userData,\n    setUserData\n  } = useContext(userDataContext); // useEffect(() => {\n  //     setUserData({userenter: false});\n  // }, [])\n  // const { useruid, databaseref } = userData;\n  // setUserData({ useruid: 'hjdg' })\n  // console.log(databaseref)\n  // const [auth, setAuth] = useState(null);\n  // const [database, setDatabase] = useState(null);\n  // useEffect(() => {\n  //     // Initialize Firebase\n  //     firebase.initializeApp(firebaseConfig);\n  //     setAuth(firebase.auth());\n  //     setDatabase(firebase.database())\n  // }, []);\n  // const [Artist, setArtist] = useState(null);\n  // const [Musicname, setMusicname] = useState(null);\n  // const [Musicsource, setMusicsorce] = useState(null);\n\n  const [musicIdx, setMusicIdx] = useState(0); // const audioEl = useRef(null)\n  // const [isPlaying, setIsPlaying] = useState(false);\n\n  const [musicData, setMusicData] = useState(null);\n  const [_shouldSwitch, shouldSwitch] = useState(false);\n  useEffect(() => {\n    if (_shouldSwitch) {\n      shouldSwitch(false);\n      handlePlayPause();\n    }\n  }, [_shouldSwitch]); // let musicAudio = document.querySelector(\"#main-audio\")\n  // let audio= new Audio(ALL_MUSIC[indexs-1].src);\n  // useEffect(() => {\n  //     // audio.load();\n  //     if (isplay) {\n  //     }\n  //     else {\n  //     }\n  // });\n\n  {\n    /* <audio id=\"main-audio\" src={ALL_MUSIC[musicIndex-1].src}></audio> */\n  }\n\n  const handlePlayPause = () => {\n    toggle(); // PlayPause();\n    // setisplay(!isplay);\n  };\n\n  const handleNext = (flag, cycle) => {\n    // const t = Next();\n    // setindexs(t);\n    // setisplay(true);\n    // console.log(ALL_MUSIC[indexs-1].src)\n    // let k=ALL_MUSIC[indexs-1];\n    // console.log(k, indexs);\n    // setsource(ALL_MUSIC[indexs-1].src)\n    // if (playing)\n    //     toggle()\n    // console.log(musicIdx, \"preset\");\n    let index = musicIdx;\n    console.log('shouldCycle', cycle);\n\n    if (!flag || flag && !cycle) {\n      // console.log(musicIdx, \"afterset\");\n      console.log(!flag);\n      console.log(flag && !cycle);\n\n      if (musicIdx == ALL_MUSIC.length - 1) {\n        index = 0;\n      } else {\n        index = musicIdx + 1;\n      }\n\n      let found = true;\n\n      while (found) {\n        for (let i = 0; i < compositionsindex.length; i++) {\n          if (compositionsindex[i] - 1 == index) {\n            found = false;\n            setMusicIdx(index);\n          }\n        }\n\n        if (found) {\n          if (index == ALL_MUSIC.length - 1) {\n            index = 0;\n          } else {\n            index++;\n          }\n        }\n      }\n    }\n\n    console.log('next index', index); // console.log('currPlaying', currPlaying);\n\n    if (flag) {\n      console.log('flag');\n      const playingCopy = playing;\n      toggle();\n      playAfterSet(true);\n      if (!cycle) setUrl(ALL_MUSIC[index].url);\n      setTimeout(() => {\n        console.log('in timeout');\n        if (playingCopy) shouldSwitch(true);\n        handlePlayPause();\n      }, 1000);\n      return;\n    }\n\n    if (!playing) {\n      setUrl(ALL_MUSIC[index].url);\n    } else {\n      toggle();\n      playAfterSet(true);\n      setUrl(ALL_MUSIC[index].url);\n    }\n  };\n\n  const handlePrev = () => {\n    // const t = Prev();\n    // setindexs(t);\n    // setisplay(true);\n    // setsource(ALL_MUSIC[t-1].src)\n    // if (playing)\n    //     toggle()\n    // setMusicIdx(musicIdx == 0 ? ALL_MUSIC.length - 1 : musicIdx - 1);\n    let index = musicIdx;\n\n    if (musicIdx == 0) {\n      index = ALL_MUSIC.length - 1;\n    } else {\n      index = musicIdx - 1;\n    } // console.log(musicIdx, \"afterset\");\n    // console.log(\"prefor\")\n\n\n    let found = true;\n\n    while (found) {\n      for (let i = 0; i < compositionsindex.length; i++) {\n        if (compositionsindex[i] - 1 == index) {\n          found = false;\n          setMusicIdx(index);\n        }\n      }\n\n      if (found) {\n        if (index == 0) {\n          index = ALL_MUSIC.length - 1;\n        } else {\n          index--;\n        }\n      }\n    }\n\n    console.log('next index', index);\n    console.log('playing', playing);\n\n    if (!playing) {\n      setUrl(ALL_MUSIC[index].url);\n    } else {\n      toggle();\n      playAfterSet(true);\n      setUrl(ALL_MUSIC[index].url);\n    }\n  };\n\n  const [playing, toggle, setUrl, playAfterSet, toggleCycle, shouldCycle] = useAudio('', handleNext);\n  const [showList, setShowList] = useState(false);\n  const [compositionsindex, setCompositionsindex] = useState([1, 2, 3, 4]);\n  const [liststatus, setliststatus] = useState(false);\n  useEffect(() => {\n    setMusicData(ALL_MUSIC[musicIdx] || null);\n  }, [musicIdx]);\n  useEffect(() => {\n    setUrl((musicData === null || musicData === void 0 ? void 0 : musicData.url) || '');\n    console.log('musicData', musicData);\n  }, [musicData]);\n\n  const handlechange = () => {\n    if (liststatus == false) {\n      GetData().then(result => {\n        let t = JSON.parse(result);\n        let k = [];\n\n        for (let i = 0; i < t.length; i++) {\n          k.push(t[i].index);\n        }\n\n        ;\n        setCompositionsindex(k);\n        setliststatus(true);\n      });\n    } else {\n      setliststatus(false);\n      setCompositionsindex([1, 2, 3, 4]);\n    }\n  };\n\n  const handlelike = () => {\n    GetData().then(result => {\n      let t = JSON.parse(result);\n      let found = false;\n\n      for (let i = 0; i < t.length; i++) {\n        // console.log(\"Equal? \", );\n        if (t[i].index == musicIdx + 1) {\n          found = true;\n        }\n      }\n\n      let k = [];\n      console.log(found, \"found???\");\n\n      if (found == false) {\n        let p = musicIdx + 1; // console.log(\"p\", p)\n\n        t.push({\n          index: p\n        });\n        LoadDataList(t);\n      } else {\n        for (let i = 0; i < t.length; i++) {\n          if (t[i].index - 1 != musicIdx) {\n            k.push({\n              index: t[i].index\n            });\n          }\n        }\n\n        console.log(\"Loaddatato Delete\", k);\n        LoadDataList(k);\n      }\n    });\n  }; // const handleCircle = () => {\n  //     Circle()\n  // }\n\n\n  const handleListItemClick = id => {\n    console.log('clicked with id', id);\n    const newIdx = ALL_MUSIC.findIndex(data => data.id == id);\n\n    if (newIdx != -1) {\n      console.log('newIdx', newIdx);\n      setShowList(false);\n      setMusicIdx(newIdx);\n\n      if (!playing) {\n        playAfterSet(true);\n        setUrl(ALL_MUSIC[newIdx].url);\n      } else {\n        toggle();\n        playAfterSet(true);\n        setUrl(ALL_MUSIC[newIdx].url);\n      }\n    }\n  };\n\n  useEffect(() => console.log('shouldCycle', shouldCycle), [shouldCycle]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        id: \"more-s\",\n        className: \"material-icons\",\n        onClick: () => setShowList(true),\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), showList && /*#__PURE__*/_jsxDEV(MusicList // listIds={ALL_MUSIC.map((data) => data.id)}\n      , {\n        listIds: compositionsindex,\n        onClick: handleListItemClick,\n        onClose: () => setShowList(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"likedislike\",\n        className: \"listc\",\n        onClick: handlelike,\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"changelist\",\n        className: \"listc\",\n        onClick: handlechange,\n        children: \"Choose user list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-area\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: (musicData === null || musicData === void 0 ? void 0 : musicData.name) || 'Not defined'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"artist\",\n        children: (musicData === null || musicData === void 0 ? void 0 : musicData.artist) || 'Not defined'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlss\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"prev\",\n        className: \"material-icons prev musiccontrlole\",\n        onClick: handlePrev,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"pause\",\n        className: \"material-icons play musiccontrlole\",\n        onClick: handlePlayPause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"next\",\n        className: \"material-icons next musiccontrlole\",\n        onClick: () => handleNext(false, shouldCycle),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"repeat-plist\",\n        className: \"material-icons repeat musiccontrlole\",\n        title: \"Playlist looped\",\n        onClick: toggleCycle,\n        children: \"Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainBody, \"XLuR1bGx+CvMnnIqC74dMS6javw=\", false, function () {\n  return [useAudio];\n});\n\n_c = MainBody;\nexport default MainBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"names":["useContext","useEffect","useState","useRef","userDataContext","prev","next","pause","circle","logolist","logo","useAudio","MusicList","ALL_MUSIC","GetData","LoadDataList","MainBody","userData","setUserData","musicIdx","setMusicIdx","musicData","setMusicData","_shouldSwitch","shouldSwitch","handlePlayPause","toggle","handleNext","flag","cycle","index","console","log","length","found","i","compositionsindex","playingCopy","playing","playAfterSet","setUrl","url","setTimeout","handlePrev","toggleCycle","shouldCycle","showList","setShowList","setCompositionsindex","liststatus","setliststatus","handlechange","then","result","t","JSON","parse","k","push","handlelike","p","handleListItemClick","id","newIdx","findIndex","data","name","artist"],"sources":["C:/Users/user/Desktop/musicplayerReact/musicplayer/src/components/main-body.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\nimport { useContext, useEffect, useState, useRef } from 'react';\r\nimport '../App.css';\r\n\r\nimport { userDataContext } from '../context/usercontext';\r\nimport prev from '../images/previous.png';\r\nimport next from '../images/fast-forward.png';\r\nimport pause from '../images/play.png';\r\nimport circle from '../images/replay.png';\r\nimport logolist from '../images/playlist.png';\r\nimport logo from '../images/DQBBAtuUEAIcZuL.jpg';\r\nimport useAudio from '../hooks/useAudio';\r\nimport MusicList from './music-list';\r\nimport ALL_MUSIC from '../utils/musics_functions';\r\n\r\nimport { GetData, LoadDataList } from '../utils/firebase';\r\n\r\n\r\n\r\n\r\nfunction MainBody() {\r\n    const { userData, setUserData } = useContext(userDataContext);\r\n\r\n    // useEffect(() => {\r\n    //     setUserData({userenter: false});\r\n    // }, [])\r\n    // const { useruid, databaseref } = userData;\r\n\r\n    // setUserData({ useruid: 'hjdg' })\r\n    // console.log(databaseref)\r\n\r\n    // const [auth, setAuth] = useState(null);\r\n    // const [database, setDatabase] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     // Initialize Firebase\r\n    //     firebase.initializeApp(firebaseConfig);\r\n\r\n    //     setAuth(firebase.auth());\r\n    //     setDatabase(firebase.database())\r\n    // }, []);\r\n\r\n    // const [Artist, setArtist] = useState(null);\r\n    // const [Musicname, setMusicname] = useState(null);\r\n    // const [Musicsource, setMusicsorce] = useState(null);\r\n    const [musicIdx, setMusicIdx] = useState(0);\r\n\r\n\r\n    // const audioEl = useRef(null)\r\n    // const [isPlaying, setIsPlaying] = useState(false);\r\n    const [musicData, setMusicData] = useState(null);\r\n\r\n    const [_shouldSwitch, shouldSwitch] = useState(false);\r\n    useEffect(() => {\r\n        if (_shouldSwitch) {\r\n            shouldSwitch(false);\r\n            handlePlayPause()\r\n        }\r\n    }, [_shouldSwitch])\r\n\r\n    // let musicAudio = document.querySelector(\"#main-audio\")\r\n\r\n    // let audio= new Audio(ALL_MUSIC[indexs-1].src);\r\n\r\n    // useEffect(() => {\r\n    //     // audio.load();\r\n    //     if (isplay) {\r\n\r\n\r\n    //     }\r\n    //     else {\r\n    //     }\r\n    // });\r\n\r\n\r\n    {/* <audio id=\"main-audio\" src={ALL_MUSIC[musicIndex-1].src}></audio> */ }\r\n\r\n    const handlePlayPause = () => {\r\n\r\n        toggle()\r\n\r\n        // PlayPause();\r\n        // setisplay(!isplay);\r\n    }\r\n\r\n    const handleNext = (flag, cycle) => {\r\n        // const t = Next();\r\n        // setindexs(t);\r\n        // setisplay(true);\r\n        // console.log(ALL_MUSIC[indexs-1].src)\r\n        // let k=ALL_MUSIC[indexs-1];\r\n        // console.log(k, indexs);\r\n        // setsource(ALL_MUSIC[indexs-1].src)\r\n        // if (playing)\r\n        //     toggle()\r\n        // console.log(musicIdx, \"preset\");\r\n\r\n\r\n        let index = musicIdx;\r\n\r\n        console.log('shouldCycle', cycle)\r\n\r\n        if (!flag || (flag && !cycle)) {\r\n            // console.log(musicIdx, \"afterset\");\r\n            console.log(!flag)\r\n            console.log(flag && !cycle)\r\n            if (musicIdx == ALL_MUSIC.length - 1) {\r\n                index = 0;\r\n            }\r\n            else {\r\n                index = musicIdx + 1;\r\n            }\r\n            let found = true;\r\n\r\n            while (found) {\r\n                for (let i = 0; i < compositionsindex.length; i++) {\r\n                    if (compositionsindex[i] - 1 == index) {\r\n                        found = false;\r\n                        setMusicIdx(index);\r\n                    }\r\n                }\r\n                if (found) {\r\n                    if (index == ALL_MUSIC.length - 1) {\r\n                        index = 0;\r\n                    }\r\n                    else {\r\n                        index++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log('next index', index);\r\n        // console.log('currPlaying', currPlaying);\r\n\r\n        if (flag) {\r\n            console.log('flag')\r\n            const playingCopy = playing\r\n            toggle()\r\n            playAfterSet(true)\r\n            if (!cycle)\r\n                setUrl(ALL_MUSIC[index].url)\r\n            setTimeout(() => {\r\n                console.log('in timeout')\r\n                if (playingCopy)\r\n                    shouldSwitch(true);\r\n                handlePlayPause()\r\n            }, 1000)\r\n            return\r\n        }\r\n\r\n        if (!playing) {\r\n            setUrl(ALL_MUSIC[index].url)\r\n        } else {\r\n            toggle()\r\n            playAfterSet(true)\r\n            setUrl(ALL_MUSIC[index].url)\r\n        }\r\n    }\r\n\r\n    const handlePrev = () => {\r\n        // const t = Prev();\r\n        // setindexs(t);\r\n        // setisplay(true);\r\n        // setsource(ALL_MUSIC[t-1].src)\r\n        // if (playing)\r\n        //     toggle()\r\n        // setMusicIdx(musicIdx == 0 ? ALL_MUSIC.length - 1 : musicIdx - 1);\r\n\r\n\r\n        let index = musicIdx;\r\n        if (musicIdx == 0) {\r\n            index = ALL_MUSIC.length - 1;\r\n        }\r\n        else {\r\n            index = musicIdx - 1;\r\n        }\r\n\r\n        // console.log(musicIdx, \"afterset\");\r\n        // console.log(\"prefor\")\r\n        let found = true;\r\n\r\n        while (found) {\r\n            for (let i = 0; i < compositionsindex.length; i++) {\r\n                if (compositionsindex[i] - 1 == index) {\r\n                    found = false;\r\n                    setMusicIdx(index);\r\n                }\r\n            }\r\n            if (found) {\r\n\r\n                if (index == 0) {\r\n                    index = ALL_MUSIC.length - 1;\r\n                }\r\n                else {\r\n                    index--;\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log('next index', index);\r\n        console.log('playing', playing);\r\n\r\n        if (!playing) {\r\n            setUrl(ALL_MUSIC[index].url)\r\n        } else {\r\n            toggle()\r\n            playAfterSet(true)\r\n            setUrl(ALL_MUSIC[index].url)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const [playing, toggle, setUrl, playAfterSet, toggleCycle, shouldCycle] = useAudio('', handleNext);\r\n\r\n    const [showList, setShowList] = useState(false);\r\n\r\n    const [compositionsindex, setCompositionsindex] = useState([1, 2, 3, 4])\r\n\r\n    const [liststatus, setliststatus] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setMusicData(ALL_MUSIC[musicIdx] || null);\r\n    }, [musicIdx]);\r\n\r\n    useEffect(() => {\r\n        setUrl(musicData?.url || '')\r\n        console.log('musicData', musicData);\r\n    }, [musicData]);\r\n\r\n    const handlechange = () => {\r\n\r\n        if (liststatus == false) {\r\n            GetData().then((result) => {\r\n                let t = JSON.parse(result);\r\n                let k = []\r\n                for (let i = 0; i < t.length; i++) {\r\n                    k.push(t[i].index)\r\n                };\r\n                setCompositionsindex(k);\r\n                setliststatus(true);\r\n\r\n            });\r\n        }\r\n        else {\r\n            setliststatus(false);\r\n            setCompositionsindex([1, 2, 3, 4]);\r\n        }\r\n    }\r\n\r\n    const handlelike = () => {\r\n\r\n        GetData().then((result) => {\r\n\r\n            let t = JSON.parse(result);\r\n            let found = false;\r\n\r\n\r\n            for (let i = 0; i < t.length; i++) {\r\n                // console.log(\"Equal? \", );\r\n                if (t[i].index == musicIdx + 1) {\r\n                    found = true;\r\n                }\r\n            }\r\n\r\n\r\n            let k = []\r\n            console.log(found, \"found???\");\r\n            if (found == false) {\r\n                let p = musicIdx + 1;\r\n                // console.log(\"p\", p)\r\n                t.push({ index: p });\r\n                LoadDataList(t);\r\n            }\r\n            else {\r\n                for (let i = 0; i < t.length; i++) {\r\n                    if (t[i].index - 1 != musicIdx) {\r\n                        k.push({ index: t[i].index });\r\n                    }\r\n                }\r\n                console.log(\"Loaddatato Delete\", k);\r\n                LoadDataList(k);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // const handleCircle = () => {\r\n    //     Circle()\r\n    // }\r\n\r\n    const handleListItemClick = (id) => {\r\n\r\n        console.log('clicked with id', id)\r\n        const newIdx = ALL_MUSIC.findIndex((data) => data.id == id)\r\n        if (newIdx != -1) {\r\n            console.log('newIdx', newIdx)\r\n            setShowList(false);\r\n            setMusicIdx(newIdx)\r\n            if (!playing) {\r\n                playAfterSet(true)\r\n                setUrl(ALL_MUSIC[newIdx].url)\r\n            } else {\r\n                toggle()\r\n                playAfterSet(true)\r\n                setUrl(ALL_MUSIC[newIdx].url)\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => console.log('shouldCycle', shouldCycle), [shouldCycle]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top-bar\">\r\n                <i id=\"more-s\" className=\"material-icons\" onClick={() => setShowList(true)}>\r\n                    List\r\n                </i>\r\n                {showList &&\r\n                    (\r\n                        <MusicList\r\n                            // listIds={ALL_MUSIC.map((data) => data.id)}\r\n                            listIds={compositionsindex}\r\n                            onClick={handleListItemClick}\r\n                            onClose={() => setShowList(false)}\r\n                        />\r\n                    )\r\n                }\r\n\r\n\r\n                <span>Now Playing</span>\r\n                <button type=\"button\" id=\"likedislike\" className=\"listc\" onClick={handlelike}>Like</button>\r\n                <button type=\"button\" id=\"changelist\" className=\"listc\" onClick={handlechange}>Choose user list</button>\r\n            </div>\r\n            <div className=\"img-area\">\r\n                <img src={logo} alt=\"\" />\r\n            </div>\r\n            <div className=\"song-details\">\r\n                {/* <p className=\"name\" id=\"nameuser\">{userName || 'Current user'}</p> */}\r\n                <p className=\"name\">{musicData?.name || 'Not defined'}</p>\r\n                <p className=\"artist\">{musicData?.artist || 'Not defined'}</p>\r\n            </div>\r\n            <div className=\"controlss\">\r\n\r\n                <button type=\"button\" id=\"prev\" className=\"material-icons prev musiccontrlole\" onClick={handlePrev}>Prev</button>\r\n\r\n                <button type=\"button\" id=\"pause\" className=\"material-icons play musiccontrlole\" onClick={handlePlayPause}>Pause</button>\r\n\r\n                <button type=\"button\" id=\"next\" className=\"material-icons next musiccontrlole\" onClick={() => handleNext(false, shouldCycle)}>Next</button>\r\n\r\n                <button type=\"button\" id=\"repeat-plist\" className=\"material-icons repeat musiccontrlole\" title=\"Playlist looped\" onClick={toggleCycle}>Circle</button>\r\n            </div>\r\n            {/* <audio id=\"main-audio\" src={source} controls autoPlay></audio> */}\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainBody;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}